{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProjectService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/projects';\n  }\n  getAllProjects() {\n    return this.http.get(this.apiUrl);\n  }\n  getProjectById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createProject(project) {\n    return this.http.post(this.apiUrl, project);\n  }\n  updateProject(id, project) {\n    return this.http.put(`${this.apiUrl}/${id}`, project);\n  }\n  deleteProject(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  searchProjectsByTitle(title) {\n    return this.http.get(`${this.apiUrl}/search/title?title=${title}`);\n  }\n  searchProjectsByTechnology(technology) {\n    return this.http.get(`${this.apiUrl}/search/technology?technology=${technology}`);\n  }\n  static {\n    this.ɵfac = function ProjectService_Factory(t) {\n      return new (t || ProjectService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProjectService,\n      factory: ProjectService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ProjectService","constructor","http","apiUrl","getAllProjects","get","getProjectById","id","createProject","project","post","updateProject","put","deleteProject","delete","searchProjectsByTitle","title","searchProjectsByTechnology","technology","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/kalanamw/Documents/GitHub/My_Portfolio/frontend/src/app/services/project.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Project } from '../models/project.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  private apiUrl = 'http://localhost:8080/api/projects';\n\n  constructor(private http: HttpClient) { }\n\n  getAllProjects(): Observable<Project[]> {\n    return this.http.get<Project[]>(this.apiUrl);\n  }\n\n  getProjectById(id: number): Observable<Project> {\n    return this.http.get<Project>(`${this.apiUrl}/${id}`);\n  }\n\n  createProject(project: Project): Observable<Project> {\n    return this.http.post<Project>(this.apiUrl, project);\n  }\n\n  updateProject(id: number, project: Project): Observable<Project> {\n    return this.http.put<Project>(`${this.apiUrl}/${id}`, project);\n  }\n\n  deleteProject(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  searchProjectsByTitle(title: string): Observable<Project[]> {\n    return this.http.get<Project[]>(`${this.apiUrl}/search/title?title=${title}`);\n  }\n\n  searchProjectsByTechnology(technology: string): Observable<Project[]> {\n    return this.http.get<Project[]>(`${this.apiUrl}/search/technology?technology=${technology}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEb;EAExCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEAG,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAC,aAAaA,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,MAAM,EAAEM,OAAO,CAAC;EACtD;EAEAE,aAAaA,CAACJ,EAAU,EAAEE,OAAgB;IACxC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,OAAO,CAAC;EAChE;EAEAI,aAAaA,CAACN,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAQ,qBAAqBA,CAACC,KAAa;IACjC,OAAO,IAAI,CAACd,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,uBAAuBa,KAAK,EAAE,CAAC;EAC/E;EAEAC,0BAA0BA,CAACC,UAAkB;IAC3C,OAAO,IAAI,CAAChB,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,iCAAiCe,UAAU,EAAE,CAAC;EAC9F;;;uBA/BWlB,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdtB,cAAc;MAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}