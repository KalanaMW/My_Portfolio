{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContactService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/contact';\n  }\n  sendMessage(message) {\n    return this.http.post(this.apiUrl, message);\n  }\n  getAllMessages() {\n    return this.http.get(this.apiUrl);\n  }\n  getUnreadMessages() {\n    return this.http.get(`${this.apiUrl}/unread`);\n  }\n  getUnreadMessageCount() {\n    return this.http.get(`${this.apiUrl}/count`);\n  }\n  getMessageById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  markAsRead(id) {\n    return this.http.put(`${this.apiUrl}/${id}/read`, {});\n  }\n  getMessagesByEmail(email) {\n    return this.http.get(`${this.apiUrl}/email/${email}`);\n  }\n  deleteMessage(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function ContactService_Factory(t) {\n      return new (t || ContactService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ContactService,\n      factory: ContactService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ContactService","constructor","http","apiUrl","sendMessage","message","post","getAllMessages","get","getUnreadMessages","getUnreadMessageCount","getMessageById","id","markAsRead","put","getMessagesByEmail","email","deleteMessage","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/kalanamw/Documents/GitHub/My_Portfolio/frontend/src/app/services/contact.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ContactMessage } from '../models/contact-message.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  private apiUrl = 'http://localhost:8080/api/contact';\n\n  constructor(private http: HttpClient) { }\n\n  sendMessage(message: ContactMessage): Observable<ContactMessage> {\n    return this.http.post<ContactMessage>(this.apiUrl, message);\n  }\n\n  getAllMessages(): Observable<ContactMessage[]> {\n    return this.http.get<ContactMessage[]>(this.apiUrl);\n  }\n\n  getUnreadMessages(): Observable<ContactMessage[]> {\n    return this.http.get<ContactMessage[]>(`${this.apiUrl}/unread`);\n  }\n\n  getUnreadMessageCount(): Observable<number> {\n    return this.http.get<number>(`${this.apiUrl}/count`);\n  }\n\n  getMessageById(id: number): Observable<ContactMessage> {\n    return this.http.get<ContactMessage>(`${this.apiUrl}/${id}`);\n  }\n\n  markAsRead(id: number): Observable<ContactMessage> {\n    return this.http.put<ContactMessage>(`${this.apiUrl}/${id}/read`, {});\n  }\n\n  getMessagesByEmail(email: string): Observable<ContactMessage[]> {\n    return this.http.get<ContactMessage[]>(`${this.apiUrl}/email/${email}`);\n  }\n\n  deleteMessage(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,mCAAmC;EAEZ;EAExCC,WAAWA,CAACC,OAAuB;IACjC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAiB,IAAI,CAACH,MAAM,EAAEE,OAAO,CAAC;EAC7D;EAEAE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAmB,IAAI,CAACL,MAAM,CAAC;EACrD;EAEAM,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACP,IAAI,CAACM,GAAG,CAAmB,GAAG,IAAI,CAACL,MAAM,SAAS,CAAC;EACjE;EAEAO,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAS,GAAG,IAAI,CAACL,MAAM,QAAQ,CAAC;EACtD;EAEAQ,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACV,IAAI,CAACM,GAAG,CAAiB,GAAG,IAAI,CAACL,MAAM,IAAIS,EAAE,EAAE,CAAC;EAC9D;EAEAC,UAAUA,CAACD,EAAU;IACnB,OAAO,IAAI,CAACV,IAAI,CAACY,GAAG,CAAiB,GAAG,IAAI,CAACX,MAAM,IAAIS,EAAE,OAAO,EAAE,EAAE,CAAC;EACvE;EAEAG,kBAAkBA,CAACC,KAAa;IAC9B,OAAO,IAAI,CAACd,IAAI,CAACM,GAAG,CAAmB,GAAG,IAAI,CAACL,MAAM,UAAUa,KAAK,EAAE,CAAC;EACzE;EAEAC,aAAaA,CAACL,EAAU;IACtB,OAAO,IAAI,CAACV,IAAI,CAACgB,MAAM,CAAO,GAAG,IAAI,CAACf,MAAM,IAAIS,EAAE,EAAE,CAAC;EACvD;;;uBAnCWZ,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdtB,cAAc;MAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}